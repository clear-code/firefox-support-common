
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

Network-1: Microsoft .NET Frameworkによって変更されたUA文字列の初期化

    :1: 初期化する

    cfg_or_jsc: |
      clearPref("general.useragent.extra.microsoftdotnet");

    :2: 初期化しない（既定）

    -

Network-2: プロキシの利用

    :1: [廃止] 利用しない（MCD）

    deprecated: true

    :6: 利用しない

    policies_json: |
      "Proxy": {
        "Mode": "none",
        "Locked": true
      }      
      
    GPO: |
      カテゴリ「Firefox」
      → 「Proxy Settings」を有効化し、「Connection Type:」で「No Proxy」を選択、「Don't allow proxy settings to be changed.」のチェックをON

    :2: [廃止] 固定のプロキシを利用する（MCD）

    deprecated: true

    :7: 固定のプロキシを利用する

    policies_json: |
      "Proxy": {
        "Mode": "manual",
        "HTTPProxy": "（ホスト名）:（ポート番号）",
        "UseHTTPProxyForAllProtocols": true,
        "Locked": true
      }
      
      
    GPO: |
      カテゴリ「Firefox」
      → 「Proxy Settings」を有効化し、「Connection Type:」で「Manual proxy configuration」を選択、「HTTP Proxy:」にホスト名とポートを入力、「Use this proxy server for all protocols.」と「Don't allow proxy settings to be changed.」のチェックをON

    :3: [廃止] プロキシ自動設定スクリプトを利用する（MCD）

    deprecated: true

    :8: プロキシ自動設定スクリプトを利用する

    policies_json: |
      "Proxy": {
        "Mode": "autoConfig",
        "AutoConfigURL": "（ファイルのURL）",
        "Locked": true
      }
      
    GPO: |
      カテゴリ「Firefox」
      → 「Proxy Settings」を有効化し、「Connection Type:」で「Automatic proxy configuration」を選択、「Automatic proxy configuration URL」にURLを入力、「Don't allow proxy settings to be changed.」のチェックをON

    :4: [廃止] WPADでネットワークのプロキシ設定を自動検出する（MCD）

    deprecated: true

    :9: WPADでネットワークのプロキシ設定を自動検出する

    policies_json: |
      "Proxy": {
        "Mode": "autoDetect",
        "Locked": true
      }
      
    GPO: |
      カテゴリ「Firefox」
      → 「Proxy Settings」を有効化し、「Connection Type:」で「Auto-detect proxy settings」を選択、「Don't allow proxy settings to be changed.」のチェックをON

    :5: システムの設定を利用する（既定）

    -

    :10: システムの設定を利用する（明示）

    policies_json: |
      "Proxy": {
        "Mode": "system",
        "Locked": true
      }
      
    GPO: |
      カテゴリ「Firefox」
      → 「Proxy Settings」を有効化し、「Connection Type:」で「Use system proxy settings」を選択、「Don't allow proxy settings to be changed.」のチェックをON

Network-3: [廃止] SSL3.0の利用の可否

    :1: [廃止] 許可する

    deprecated: true

    :2: [廃止] 禁止する（既定）

    deprecated: true

Network-4: NTLM認証によるシングルサインオンの許可

    :1: [廃止] 許可する（MCD）

    deprecated: true

    :2: 許可する

    comment: |
      // SPNEGO: network.negotiate-auth.trusted-uris
      // Delegated: network.negotiate-auth.delegation-uris
      // NTLM: network.automatic-ntlm-auth.trusted-uris
      
    policies_json: |
      "Authentication": {
        "SPNEGO": ["https://example.com/"],
        "Delegated": ["https://example.com/"],
        "NTLM": ["https://example.com/"]
      }      
      
    GPO: |
      カテゴリ「Firefox」→「Authentication」
      → 「SPNEGO」を有効化し、オプションでWebサイトを指定
      → 「Delegated」を有効化し、オプションでWebサイトを指定
      → 「NTLM」を有効化し、オプションでWebサイトを指定

    :3: 許可しない

    cfg_or_jsc: |
      defaultPref("network.automatic-ntlm-auth.trusted-uris", "");

Network-5: HTTPの同時接続数

    :1: パフォーマンスを優先（既定）

    cfg_or_jsc: |
      // 最大同時接続数
      //defaultPref("network.http.max-connections", 900);
      // Proxy未使用時・使用時それぞれの、Keep-Aliveでの最大同時維持接続数
      //defaultPref("network.http.max-persistent-connections-per-server", 6);
      //defaultPref("network.http.max-persistent-connections-per-proxy", 32);

    :2: トラフィックを抑える事を優先

    policies_json: |
      "Preferences": {
        "network.http.max-connections": {
          "Value": 6,
          "Status": "locked"
        },
        "network.http.max-persistent-connections-per-server": {
          "Value": 2,
          "Status": "locked"
        },
        "network.http.max-persistent-connections-per-proxy": {
          "Value": 2,
          "Status": "locked"
        }
      }
      
    GPO: |
      カテゴリ「Firefox」
      →「Preferences」を有効化し、policies.jsonのPreferencesに設定する内容と同等のJSON文字列を設定

Network-6: SPDYプロトコルの使用の可否

    :1: 許可する（既定）

    -

    :2: 禁止する

    policies_json: |
      "Preferences": {
        "network.http.spdy.enabled": {
          "Value": false,
          "Status": "locked"
        }
      }
            
    GPO: |
      カテゴリ「Firefox」
      →「Preferences」を有効化し、policies.jsonのPreferencesに設定する内容と同等のJSON文字列を設定

Network-7: TLS/SSLでの脆弱な暗号化アルゴリズム（RC4など）の使用の可否

    :1: 禁止する（既定）

    -

    :2: 特定のホストでのみ許可する

    cfg_or_jsc: |
      lockPref("security.tls.insecure_fallback_hosts", "（ホスト名のカンマ区切りのリスト）");

Network-8: IPv6の使用

    :1: 許可する（既定）

    -

    :2: 禁止する

    policies_json: |
      "Preferences": {
        "network.dns.disableIPv6": {
          "Value": true,
          "Status": "locked"
        }
      }
      
    GPO: |
      カテゴリ「Firefox」
      →「Preferences」を有効化し、policies.jsonのPreferencesに設定する内容と同等のJSON文字列を設定

Network-9: [廃止] HTTP Pipeliningの使用

    :1: [廃止] 許可する

    deprecated: true

    :2: [廃止] 禁止する（既定）

    deprecated: true

Network-10: onionドメインの名前解決

    :1: 許可する（既定）

    -

    :2: 禁止する

    policies_json: |
      "Preferences": {
        "network.dns.blockDotOnion": {
          "Value": true,
          "Status": "locked"
        }
      }
      
    GPO: |
      カテゴリ「Firefox」
      →「Preferences」を有効化し、policies.jsonのPreferencesに設定する内容と同等のJSON文字列を設定

Network-11: UA文字列の変更

    :1: 変更しない（既定）

    -

    :2: 任意の値を設定する

    cfg_or_jsc: |
      lockPref("general.useragent.override", "（任意の内容）");

Network-12: [廃止] リモートファイルに対するjarプロトコルの使用

    :1: [廃止] 許可する（既定）

    deprecated: true

    :2: [廃止] 禁止する

    deprecated: true

Network-13: TLS 1.3の使用

    :1: 許可する（既定）

    -

    :2: [廃止] 禁止する（MCD）

    deprecated: true

    :4: 許可する（明示）

    policies_json: |
      "SSLVersionMax": "tls1.3"
      
    GPO: |
      カテゴリ「Firefox」
      → 「Maximum SSL version enabled」を有効化し、オプションで「TLS 1.3」を選択

    :3: 禁止する

    policies_json: |
      "SSLVersionMax": "tls1.2", // "tls1", "tls1.1", "tls1.2" のいずれか
      
    GPO: |
      カテゴリ「Firefox」
      → 「Maximum SSL version enabled」を有効化し、オプションで「TLS 1.0」から「TLS 1.2」のいずれかを選択

Network-14: SSL/TLSでのSHA-1証明書の使用の可否

    :1: 常に受け入れる

    cfg_or_jsc: |
      lockPref("security.pki.sha1_enforcement_level", 0);

    :2: 常に拒否する

    cfg_or_jsc: |
      lockPref("security.pki.sha1_enforcement_level", 1);

    :3: 2016年以前発行の公的な証明書を受け入れる

    cfg_or_jsc: |
      lockPref("security.pki.sha1_enforcement_level", 2);

    :4: インポートした認証局の発行した証明書を受け入れる（既定）

    cfg_or_jsc: |
      // lockPref("security.pki.sha1_enforcement_level", 3);

    :5: 2016年以前発行の公的な証明書とインポートした認証局の発行した証明書の両方を受け入れる

    cfg_or_jsc: |
      lockPref("security.pki.sha1_enforcement_level", 4);

Network-15: [廃止] HTTP Pipeliningの最大同時リクエスト数

    :1: [廃止] パフォーマンスを優先（既定）

    deprecated: true

    :2: [廃止] トラフィックを抑える事を優先

    deprecated: true

Network-16: FQDN形式でない（ドットを含まない）ホスト名でのシングルサインオンの許可

    :1: [廃止] 許可する（MCD）

    deprecated: true

    :2: 許可する

    comment: |
      // AllowNonFQDN.SPNEGO: network.negotiate-auth.allow-non-fqdn
      // AllowNonFQDN.NTLM: network.automatic-ntlm-auth.allow-non-fqdn
      
    policies_json: |
      "Authentication": {
        "AllowNonFQDN": {
          "SPNEGO": true,
          "NTLM": true
        }
      }      
      
    GPO: |
      カテゴリ「Firefox」→「Authentication」
      → 「Allow Non FQDN」を有効化し、オプションで「Always allow NTLM on non FDNs」と「Always allow SPNEGO on non FDNs」のチェックをON

Network-17: 脆弱なバージョンのTLSの使用

    :1: TLS 1.0/1.1の使用を許可する

    comment: |
      // 暗号スイートとして3DESが必要ならNetwork-28を併用する

    policies_json: |
      "SSLVersionMin": "tls1",
      
    GPO: |
      カテゴリ「Firefox」
      → 「Maximum SSL version enabled」を有効化し、オプションで「TLS 1.0」を選択

    :2: 特定バージョン以上のTLSの使用を強制

    comment: |
      // 暗号スイートとして3DESが必要ならNetwork-28を併用する
    policies_json: |
      "SSLVersionMin": "tls1.1", // "tls1", "tls1.1", "tls1.2", "tls1.3" のいずれか
      
    GPO: |
      カテゴリ「Firefox」
      → 「Maximum SSL version enabled」を有効化し、オプションで「TLS 1.0」から「TLS 1.3」のいずれかを選択

    :3: TLS 1.0/1.1の使用を禁止する（既定）

    -

Network-18: navigator.appVersionの変更

    :1: 変更しない（既定）

    -

    :2: 任意の値を設定する

    cfg_or_jsc: |
      lockPref("general.appversion.override", "5.0 (Windows)");

Network-19: TLSのクライアント証明書を組織内で使用している場合向けの、CORSプロトコルでのGoogle Chrome互換の動作

    :1: 使用しない（既定）

    -

    :2: 使用する（Google Chrome互換の動作にする）

    policies_json: |
      "Preferences": {
        "network.cors_preflight.allow_client_cert": {
          "Value": true,
          "Status": "locked"
        }
      }      
      
    GPO: |
      カテゴリ「Firefox」
      →「Preferences」を有効化し、policies.jsonのPreferencesに設定する内容と同等のJSON文字列を設定

Network-20: Google Workspaceへのアクセスを許可するドメイン

    :1: 許可しない（既定）

    -

    :2: 指定のサイトで許可する

    policies_json: |
      "AllowedDomainsForApps": "example.com,example.org,..."
      
      
    GPO: |
      カテゴリ「Firefox」
      →「Define domains allowed to access Google Workspace」を有効化し、オプションでドメイン名をカンマ区切りで列挙

Network-21: FTPの使用

    :1: 使用しない（既定）

    -

    :2: 使用する

    policies_json: |
      "Preferences": {
        "network.ftp.enabled": {
          "Value": true,
          "Status": "locked"
        }
      }
      
    GPO: |
      カテゴリ「Firefox」
      →「Preferences」を有効化し、policies.jsonのPreferencesに設定する内容と同等のJSON文字列を設定

Network-22: localhostの名前解決

    :1: 常にループバックインターフェイスとして扱う（既定）

    -

    :2: 通常の名前解決を許可する

    policies_json: |
      "Preferences": {
        "network.proxy.allow_hijacking_localhost": {"Value": true,"Status": "locked"}
      }

Network-23: 外部アプリケーションの起動の許可

    :1: 確認を求める（既定）

    -

    :2: 確認無しで起動を許可する

    policies_json: |
      "AutoLaunchProtocolsFromOrigins": [
          {
            "protocol": "zoommtg",
            "allowed_origins": [
              "https://somesite.zoom.us"
            ]
          }
      ]

Network-24: Windowsのシングルサインオン

    :1: 使用しない（既定）

    -

    :2: 使用する

    policies_json: |
      "WindowsSSO": true

Network-25: SOCKS v5使用時のDNSに対するプロキシーの仕様

    :1: 使用しない（既定）

    policies_json: |
      "Proxy": {
        "UseProxyForDNS": false,
        "Locked": true
      }
      
    comment: |
      単独でロック状態を制御する場合は以下の通り
      
      policies_json: |
      "Preferences": {
        "network.proxy.socks_remote_dns": {
          "Value": false,
          "Status": "locked"
        },
        ...
      }

    :2: 使用する

    policies_json: |
      "Proxy": {
        "UseProxyForDNS": true,
        "Locked": true
      },
      
    comment: |
      単独でロック状態を制御する場合は以下の通り
      
      policies_json: |
      "Preferences": {
        "network.proxy.socks_remote_dns": {
          "Value": true,
          "Status": "locked"
        },
        ...
      }

Network-26: HTTPS RRによる、DNSでの名前解決時点でのHTTPSへの自動アップグレード

    :1: 行う（既定）

    -

    :2: 行わない

    cfg_or_jsc: |
      lockPref("network.dns.upgrade_with_https_rr", false);
      
    policies_json: |
      "Preferences": {
        "network.dns.upgrade_with_https_rr": {
          "Value": false,
          "Status": "locked"
        }
      }
      
    GPO: |
      カテゴリ「Firefox」
      →「Preferences」を有効化し、policies.jsonのPreferencesに設定する内容と同等のJSON文字列を設定

Network-27: 古いバージョンのTLS以外での3DESの使用

    :1: 許可する

    cfg_or_jsc: |
      lockPref("security.ssl3.deprecated.rsa_des_ede3_sha", false);
      
    policies_json: |
      "DisabledCiphers": {
        "TLS_RSA_WITH_3DES_EDE_CBC_SHA": false,
      }
      
    GPO: |
      カテゴリ「Firefox」
      →「Disabled Ciphers」
      →「TLS_RSA_WITH_3DES_EDE_CBC_SHA」を無効化

    :2: 禁止する（既定）

    -

Network-28: 古いバージョンのTLS(1.0/1.1)での3DESの使用

    :1: 許可する

    comment: |
      // TLS1.0/1.1で通信するときに3DESが使えるようにするにはNetwork-17-1,Network-17-2でTLS1.0/1.1を
      // 許可するだけでは不十分で以下の設定を併用して明示的に有効化する必要がある
    
    policies_json: |
      "Preferences": {
        "security.tls.version.enable-deprecated": {
          "Value": true,
          "Status": "locked"
        }
      }
      
    GPO: |
      カテゴリ「Firefox」
      →「Preferences」を有効化し、policies.jsonのPreferencesに設定する内容と同等のJSON文字列を設定

    :2: 禁止する（既定）

    -
