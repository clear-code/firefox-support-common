<!--
  This Source Code Form is subject to the terms of the Mozilla Public
  License, v. 2.0. If a copy of the MPL was not distributed with this
  file, You can obtain one at http://mozilla.org/MPL/2.0/.
-->

Script-1: スクリプトによる頻繁なalertの可否

    :1: 許可する

    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - テストケースの `alert.html` を開く。
    - **確認**
        - 2つ目以降のダイアログに、以後のダイアログを表示しないようにするかどうかを尋ねるチェックボックスが表示される。

    :2: 禁止する（既定）

    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - テストケースの `alert.html` を開く。
    - **確認**
        - 2つ目以降のダイアログに、以後のダイアログを表示しないようにするかどうかを尋ねるチェックボックスが表示されない。

Script-2: プッシュ通知の可否

    :1: 確認の上で許可する（通常版・既定）

    - ポリシー設定から `BlockAboutConfig` を削除し、`about:config` を一時的に有効化しておく。
    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - `about:config` を開く。
    - **確認**
        - `dom.push.enabled` の値が `true` である。
        - `dom.serviceWorkers.enabled` の値が `true` である。

    :4: 特定サイトのみ初期状態で確認なしで許可/禁止する

    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - 確認なしでpush通知を許可する対象のサイトを開き、ロケーションバーの「(i)」アイコンをクリックして、パネル上の「サイト別設定」セクションを見る。
    - **確認**
        - 通知の受信を許可するよう権限が設定されている旨表示される。

    :5: 特定サイトのみ初期状態で確認なしで許可/禁止する（ポリシーで設定）

    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - 確認なしでpush通知を許可する対象のサイトを開き、ロケーションバーの「(i)」アイコンをクリックして、パネル上の「サイト別設定」セクションを見る。
    - **確認**
        - 通知の受信を許可するよう権限が設定されている旨表示される。

    :3: 禁止する（ESR版・既定）

    - ポリシー設定から `BlockAboutConfig` を削除し、`about:config` を一時的に有効化しておく。
    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - テストケースリストから `https://labs.othersight.jp/webpushtest/` のリンクをクリックする。
    - **確認**
        - ページ内に「Service Worker not available」と表示されている。
    - `about:config` を開く。
    - **確認**
        - `dom.push.enabled` の値が `false` である。
        - `dom.serviceWorkers.enabled` の値が `false` である。

    :6: すべてのサイトについて初期状態で確認無しで禁止する（「通知の許可の要求をブロック」にチェック）

    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - パネルメニューからオプションを開く。
    - オプション画面の「プライバシーとセキュリティ」を開く。
    - **確認**
        - 「許可設定」→「通知」→「設定」で「通知の許可の要求をブロック」がチェック済みである。

Script-3: ゲームパッドAPIの利用の可否

    :1: 許可する（既定）

    - ポリシー設定から `BlockAboutConfig` を削除し、`about:config` を一時的に有効化しておく。
    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - `about:config` を開く。
    - **確認**
        - `domdom.gamepad.enabled` の値が `true` である。

    :2: 禁止する

    - ポリシー設定から `BlockAboutConfig` を削除し、`about:config` を一時的に有効化しておく。
    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - `about:config` を開く。
    - **確認**
        - `domdom.gamepad.enabled` の値が `false` である。

Script-4: DOMイベントによるクリップボード操作のオーバーライド

    :1: 許可する（既定）

    - ポリシー設定から `DisableDeveloperTools` を削除し、開発ツールを一時的に有効化しておく。
    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - テストケースの `mouseevent.html` を開く。
    - Ctrl-Shift-KでWebコンソールを開く。
    - コンテンツ内の文字を選択して、キーボードショートカット「Ctrl-C」でコピーする。
    - **確認**
        - コンソール上に `copy` という文字が出力される。

    :2: 禁止する

    - ポリシー設定から `DisableDeveloperTools` を削除し、開発ツールを一時的に有効化しておく。
    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - テストケースの `mouseevent.html` を開く。
    - Ctrl-Shift-KでWebコンソールを開く。
    - コンテンツ内の文字を選択して、キーボードショートカット「Ctrl-C」でコピーする。
    - **確認**
        - コンソール上に `copy` という文字が出力されない。

Script-5: DOMイベントによるコンテキストメニュー操作のオーバーライド

    :1: 許可する（既定）

    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - テストケースの `mouseevent.html` を開く。
    - コンテンツ領域の上で右クリックする。
    - **確認**
        - コンテキストメニューが開かれない。

    :2: 禁止する

    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - テストケースの `mouseevent.html` を開く。
    - コンテンツ領域の上で右クリックする。
    - **確認**
        - コンテキストメニューが開かれる。

Script-7: 動画・音声の自動再生の可否

    :1: 許可する

    - ポリシー設定から `BlockAboutConfig` を削除し、`about:config` を一時的に有効化しておく。
    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - `about:config` を開く。
    - **確認**
        - `media.autoplay.default` の値が `0` である。
        - `media.autoplay.enabled.user-gestures-needed` の値が `true` である。

    :2: 禁止する

    - ポリシー設定から `BlockAboutConfig` を削除し、`about:config` を一時的に有効化しておく。
    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - `about:config` を開く。
    - **確認**
        - `media.autoplay.default` の値が `1` である。
        - `media.autoplay.enabled.user-gestures-needed` の値が `false` である。

    :3: 原則禁止するが、ユーザーの操作で再生される物は許可（既定）

    - ポリシー設定から `BlockAboutConfig` を削除し、`about:config` を一時的に有効化しておく。
    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - `about:config` を開く。
    - **確認**
        - `media.autoplay.default` の値が `5` である。
        - `media.autoplay.enabled.user-gestures-needed` の値が `true` である。

Script-8: target=_blankリンクに「rel=noopener」を自動的に付与する

    :1: 付与する（既定）

    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - テストケースリストから`noopener.html`を開き、ページ内のリンクをクリックする。
    - **確認**
        - テスト結果に`window.opener = null`と出力されている。

    :2: 付与しない

    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - テストケースリストから`noopener.html`を開き、ページ内のリンクをクリックする。
    - **確認**
        - テスト結果に`window.opener = [object Window]`と出力されている。

Script-9: ページ読み込み時点での、購読を促す通知の表示の可否

    :1: 表示する

    - ポリシー設定から `DisableDeveloperTools` を削除し、開発ツールを一時的に有効化しておく。
    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - `http://example.com/` を開く。
    - Ctrl-Shift-KでWebコンソールを開く。
    - `Notification.requestPermission()` と入力し、実行する。
    - **確認**
        - 権限の許可を求めるポップアップが表示される。

    :2: 禁止する（既定）

    - ポリシー設定から `DisableDeveloperTools` を削除し、開発ツールを一時的に有効化しておく。
    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - `http://example.com/` を開く。
    - Ctrl-Shift-KでWebコンソールを開く。
    - `Notification.requestPermission()` と入力し、実行する。
    - **確認**
        - コンソール上に `通知の許可設定は安全なコンテキスト内でしか要求されません。` と表示され、権限の許可を求めるポップアップが表示されない。

Script-10: 動画に対するPicture-in-Picture表示の可否

    :1: 許可する（既定）

    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - テストケースの `fullscreen.html` を開く。
    - 動画の上で右クリックする。
    - **確認**
        - メニューに「ピクチャーインピクチャー」が表示される。

    :2: 禁止する

    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - テストケースの `fullscreen.html` を開く。
    - 動画の上で右クリックする。
    - **確認**
        - メニューに「ピクチャーインピクチャー」が表示されない。

Script-11: AudioWorklet APIの使用の可否

    :1: 許可する（既定）

    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - テストケースの `fullscreen.html` を開く。
    - 動画の上で右クリックする。
    - **確認**
        - 「AudioWorklet」欄に `enabled` と表示される。

    :2: 禁止する

    - `{{meta_installer_file_name}}*.exe` が作成済みの状態にする。
    - 検証用ユーザーとして `{{meta_installer_file_name}}*.exe` を実行する。
      管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    - Firefoxを起動する。
    - テストケースの `browser.html` を開く。
    - **確認**
        - 「AudioWorklet」欄に `disabled` と表示される。
