# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

Network-0: ネットワークの設定の検証

   :1: 事前準備

    - 前項に引き続いて検証するか、{%if use_meta_installer %}または以下の状態を整えておく。
        - 作成済みの `{{meta_installer_file_name}}*.exe` を検証用ユーザーとして実行し、カスタマイズ済みFirefoxのインストールを完了している。
        - 管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    {% else %}再ログオン、インストーラの手動実行など、所定の手順でFirefoxのインストール及びカスタマイズを反映済みの状態とする。{% endif %}

Network-1: Microsoft .NET Frameworkによって変更されたUA文字列の初期化

    :1: 初期化する

    {%if Security_9_3 %}
    - ポリシー設定から `BlockAboutConfig` を削除し、`about:config` を一時的に有効化しておく。
      {% endif %}
    - Firefoxを起動する。
    - `about:config` を開く。
    - 文字列型の設定 `general.useragent.extra.microsoftdotnet` を作成し、値を `test` と入力して保存する。
    - Firefoxを再起動する。
    - `about:config` を開く。
    - **確認**
        - `general.useragent.extra.microsoftdotnet` が項目として存在しない、もしくは、値が未定義である。
      {%if Security_9_3 %}
    - ポリシー設定から一時的に削除した `BlockAboutConfig` を元に戻す。
      {% endif %}

    :2: 初期化しない（既定）

    {%if Security_9_3 %}
    - ポリシー設定から `BlockAboutConfig` を削除し、`about:config` を一時的に有効化しておく。
      {% endif %}
    - Firefoxを起動する。
    - `about:config` を開く。
    - 文字列型の設定 `general.useragent.extra.microsoftdotnet` を作成し、値を `test` と入力して保存する。
    - Firefoxを再起動する。
    - `about:config` を開く。
    - **確認**
        - `general.useragent.extra.microsoftdotnet` の値が `test` である。
      {%if Security_9_3 %}
    - ポリシー設定から一時的に削除した `BlockAboutConfig` を元に戻す。
      {% endif %}

Network-2: プロキシの利用

    :6: 利用しない

    OPTIONS

    - 「一般」→「ネットワーク設定」→「接続設定」で「プロキシーを使用しない」が選択されている。

    :7: 固定のプロキシを利用する

    OPTIONS

    - 「一般」→「ネットワーク設定」→「接続設定」が以下の通りになっている。
        - 「手動でプロキシーを設定する」が選択されている。
        - 各プロキシが指定通りに設定されている。

    :8: プロキシ自動設定スクリプトを利用する

    - 自動プロキシー設定スクリプトのURLが未設定の場合、以下の通り設定する。
      {{pac_url_setup}}
        - プロキシ自動設定スクリプトを参照できない環境で検証する場合、PACファイルの参照先URLを `data:application/javascript,` と設定する。
    - Firefoxを起動する。
    - パネルメニューから「設定」を開く。
    - 「一般」→「ネットワーク設定」→「接続設定」を開く。
    - **確認**
        - 「自動プロキシー設定スクリプトURL」が選択されている。
        - 「自動プロキシー設定スクリプトURL」の欄に、予め指定しておいたURLが入力されている。
          （`{{pac_url}}` または `data:application/javascript,`）

    :9: WPADでネットワークのプロキシ設定を自動検出する

    OPTIONS

    - 「一般」→「ネットワーク設定」→「接続設定」で「このネットワークのプロキシー設定を自動検出する」が選択されている。

    :5: システムの設定を利用する（既定）

    OPTIONS

    - 「一般」→「ネットワーク設定」→「接続設定」で「システムのプロキシー設定を利用する」が選択されている。

    :10: システムの設定を利用する（明示）

    OPTIONS

    - 「一般」→「ネットワーク設定」→「接続設定」で「システムのプロキシー設定を利用する」が選択されている。

Network-4: NTLM認証によるシングルサインオンの許可

    :2: 許可する

    ABOUT_CONFIG

    - `network.automatic-ntlm-auth.trusted-uris` の値が \
      `{{ntlm_single_signon_hosts}}` \
      である。

    :3: 許可しない

    ABOUT_CONFIG

    - `network.automatic-ntlm-auth.trusted-uris` の値が空である。

Network-5: HTTPの同時接続数

    :1: パフォーマンスを優先（既定）

    ABOUT_CONFIG

    - `network.http.max-connections` の値が `900` である。
    - `network.http.max-persistent-connections-per-proxy` の値が `32` である。
    - `network.http.max-persistent-connections-per-server` の値が `6` である。

    :2: トラフィックを抑える事を優先

    ABOUT_CONFIG

    - `network.http.max-connections` の値が `{{max_connections}}` である。
    - `network.http.max-persistent-connections-per-proxy` の値が `{{max_persistent_connections_per_proxy}}` である。
    - `network.http.max-persistent-connections-per-server` の値が `{{max_persistent_connections_per_server}}` である。

Network-6: SPDYプロトコルの使用の可否

    :1: 許可する（既定）

    ABOUT_CONFIG

    - `network.http.spdy.enabled` の値が `true` である。

    :2: 禁止する

    ABOUT_CONFIG

    - `network.http.spdy.enabled` の値が `false` である。

Network-7: TLS/SSLでの脆弱な暗号化アルゴリズム（RC4など）の使用の可否

    :1: 禁止する（既定）

    ABOUT_CONFIG

    - `security.tls.insecure_fallback_hosts` の値が未設定または空文字である。

    :2: 特定のホストでのみ許可する

    ABOUT_CONFIG

    - `security.tls.insecure_fallback_hosts` の値が \
      `{{weak_tls_allowed_hosts}}` \
      である。

Network-8: IPv6の使用

    :1: 許可する（既定）

    ABOUT_CONFIG

    - `network.dns.disableIPv6` の値が `false` である。

    :2: 禁止する

    ABOUT_CONFIG

    - `network.dns.disableIPv6` の値が `true` である。

Network-10: onionドメインの名前解決

    :1: 許可する（既定）

    ABOUT_CONFIG

    - `network.dns.blockDotOnion` の値が `false` である。

    :2: 禁止する

    ABOUT_CONFIG

    - `network.dns.blockDotOnion` の値が `true` である。

Network-11: UA文字列の変更

    :1: 変更しない（既定）

    {%if MenuShortcut_35_1 %}
    - ポリシー設定から `BlockAboutSupport` を削除し、`about:support` を一時的に有効化しておく。
      {% endif %}
    - Firefoxを起動する。
    - `about:support` を開く。
    - **確認**
        - 「ユーザーエージェント」の値がFirefox既定のUA文字列である。
      {%if MenuShortcut_35_1 %}
    - ポリシー設定から一時的に削除した `BlockAboutSupport` を元に戻す。
      {% endif %}

    :2: 任意の値を設定する

    {%if MenuShortcut_35_1 %}
    - ポリシー設定から `BlockAboutSupport` を削除し、`about:support` を一時的に有効化しておく。
      {% endif %}
    - Firefoxを起動する。
    - `about:support` を開く。
    - **確認**
        - 「ユーザーエージェント」の値が \
          {{user_agent_name}} \
          である。
      {%if MenuShortcut_35_1 %}
    - ポリシー設定から一時的に削除した `BlockAboutSupport` を元に戻す。
      {% endif %}

Network-13: TLS 1.3の使用

    :1: 許可する（既定）

    ABOUT_CONFIG

    - `security.tls.version.max` の値が `4` である。

    :4: 許可する（明示）

    ABOUT_CONFIG

    - `security.tls.version.max` の値が `4` である。

    :3: 禁止する

    ABOUT_CONFIG

    - `security.tls.version.max` の値が `3` 以下である。

Network-14: SSL/TLSでのSHA-1証明書の使用の可否

    :1: 常に受け入れる

    ABOUT_CONFIG

    - `security.pki.sha1_enforcement_level` の値が `0` である。

    :2: 常に拒否する

    ABOUT_CONFIG

    - `security.pki.sha1_enforcement_level` の値が `1` である。

    :3: 2016年以前発行の公的な証明書を受け入れる

    ABOUT_CONFIG

    - `security.pki.sha1_enforcement_level` の値が `2` である。

    :4: インポートした認証局の発行した証明書を受け入れる（既定）

    ABOUT_CONFIG

    - `security.pki.sha1_enforcement_level` の値が `3` である。

    :5: 2016年以前発行の公的な証明書とインポートした認証局の発行した証明書の両方を受け入れる

    ABOUT_CONFIG

    - `security.pki.sha1_enforcement_level` の値が `4` である。

Network-16: FQDN形式でない（ドットを含まない）ホスト名でのシングルサインオンの許可

    :2: 許可する

    ABOUT_CONFIG

    - `network.negotiate-auth.allow-non-fqdn` の値が `true` である。
    - `network.automatic-ntlm-auth.allow-non-fqdn` の値が `true` である。

Network-17: 脆弱なバージョンのTLSの使用

    :1: TLS 1.0/1.1の使用を許可する

    ABOUT_POLICIES

    - `SSLVersionMin` の値が `tls1` である。

    :2: 特定バージョン以上のTLSの使用を強制

    ABOUT_POLICIES

    - `SSLVersionMin` の値が指定の通りである。

    :3: TLS 1.0/1.1の使用を禁止する（既定）

    ABOUT_POLICIES

    - `SSLVersionMin` の値が未定義である。

Network-18: navigator.appVersionの変更

    :1: 変更しない（既定）

    {%if DisableDeveloperTools %}
    - ポリシー設定から `DisableDeveloperTools` を削除し、開発ツールを一時的に有効化しておく。
      {% endif %}
    - Firefoxを起動する。
    - Ctrl-Shift-K でWebコンソールを開く。
    - `navigagtor.appVersion` と入力し、Enterを押す。
    - **確認**
        - 結果の文字列が `5.0 (Windows)` である。
      {%if DisableDeveloperTools %}
    - ポリシー設定から一時的に削除した `DisableDeveloperTools` を元に戻す。
      {% endif %}

    :2: 任意の値を設定する

    {%if DisableDeveloperTools %}
    - ポリシー設定から `DisableDeveloperTools` を削除し、開発ツールを一時的に有効化しておく。
      {% endif %}
    - Firefoxを起動する。
    - Ctrl-Shift-K でWebコンソールを開く。
    - `navigagtor.appVersion` と入力し、Enterを押す。
    - **確認**
        - 結果の文字列が `{{navigator_appVersion}}` である。
      {%if DisableDeveloperTools %}
    - ポリシー設定から一時的に削除した `DisableDeveloperTools` を元に戻す。
      {% endif %}

Network-19: TLSのクライアント証明書を組織内で使用している場合向けの、CORSプロトコルでのGoogle Chrome互換の動作

    :1: 使用しない（既定）

    ABOUT_CONFIG

    - `network.cors_preflight.allow_client_cert` の値が `false` である。

    :2: 使用する（Google Chrome互換の動作にする）

    ABOUT_CONFIG

    - `network.cors_preflight.allow_client_cert` の値が `true` である。

Network-20: Google Workspaceへのアクセスを許可するドメイン

    :1: 許可しない（既定）

    ABOUT_POLICIES

    - `AllowedDomainsForApps` の値が存在しないか、空である。

    :2: 指定のサイトで許可する

    ABOUT_POLICIES

    - `AllowedDomainsForApps` の値として、指定のサイトのドメイン名がカンマ区切りで列挙されている。

Network-21: FTPの使用

    :1: 使用しない（既定）

    ABOUT_CONFIG

    - `network.ftp.enabled` の値が `false` である。

    :2: 使用する

    ABOUT_CONFIG

    - `network.ftp.enabled` の値が `true` である。

Network-22: localhostの名前解決

    :1: 常にループバックインターフェイスとして扱う（既定）

    ABOUT_CONFIG

    - `network.proxy.allow_hijacking_localhost` の値が `false` である。

    :2: 通常の名前解決を許可する

    ABOUT_CONFIG

    - `network.proxy.allow_hijacking_localhost` の値が `true` である。

Network-23: 外部アプリケーションの起動の許可

    :1: 確認を求める（既定）

    ABOUT_POLICIES

    - `AutoLaunchProtocolsFromOrigins` の値が存在しないか、空である。

    :2: 確認無しで起動を許可する

    ABOUT_POLICIES

    - `AutoLaunchProtocolsFromOrigins` の値として、指定のサイトのドメイン名・プロトコルが指定されている。

Network-24: Windowsのシングルサインオンの許可

    :1: 許可しない（既定）

    ABOUT_POLICIES

    - `WindowsSSO` の値が存在しないか、空である。

    :2: 許可する

    ABOUT_POLICIES

    - `WindowsSSO` の値が `true` である。

Network-25: SOCKS v5使用時のDNSに対するプロキシーの仕様

    :1: 使用しない（既定）

    OPTIONS

    - 「一般」→「ネットワーク設定」→「接続設定」で「SOCKS v5を使用するときはDNSもプロキシーを使用する」のチェックが外れている。

    :2: 使用する

    OPTIONS

    - 「一般」→「ネットワーク設定」→「接続設定」で「SOCKS v5を使用するときはDNSもプロキシーを使用する」にチェックが入っている。

Network-26: HTTPS RRによる、DNSでの名前解決時点でのHTTPSへの自動アップグレード

    :1: 行う（既定）

    ABOUT_CONFIG

    - `network.dns.upgrade_with_https_rr` の値が `true` である。

    :2: 行わない

    ABOUT_CONFIG

    - `network.dns.upgrade_with_https_rr` の値が `false` である。

Network-27: 古いバージョンのTLS以外での3DESの使用

    :1: 許可する

    ABOUT_CONFIG

    - `security.ssl3.deprecated.rsa_des_ede3_sha` の値が `false` である。

    :2: 禁止する（既定）

    ABOUT_CONFIG

    - `security.ssl3.deprecated.rsa_des_ede3_sha` の値が `true` である。

Network-28: 古いバージョンのTLS(1.0/1.1)での3DESの使用

    :1: 許可する

    ABOUT_CONFIG

    - `security.tls.version.enable-deprecated` の値が `true` である。

    :2: 禁止する（既定）

    ABOUT_CONFIG

    - `security.tls.version.enable-deprecated` の値が `false` である。

Network-29: TLSでの通信時のOCSPレスポンダーによる証明書の有効期限の積極的な確認

    :1: 確認する（既定）

    OPTIONS

    - 「プライバシーとセキュリティ」→「セキュリティ」→「証明書」で「OCSPレスポンダーサーバーに問い合わせて証明書の現在の正当性を確認する」にチェックが入っている。

    :2: 確認しない

    - 「プライバシーとセキュリティ」→「セキュリティ」→「証明書」で「OCSPレスポンダーサーバーに問い合わせて証明書の現在の正当性を確認する」のチェックが外れている。

Network-30: TLSでの通信時の時間短縮とプライバシー向上のためOCSP Staplingの使用

    :1: 使用する（既定）

    ABOUT_CONFIG

    - `security.ssl.enable_ocsp_stapling` の値が `true` である。

    :2: 使用しない

    ABOUT_CONFIG

    - `security.ssl.enable_ocsp_stapling` の値が `false` である。

Network-31: Windowsのシングルサインオン状態を既定以外のコンテナーにも反映するかどうか

    :1: 反映しない（既定）

    ABOUT_CONFIG

    - `network.http.windows-sso.container-enabled.*` の検索結果が、`network.http.windows-sso.container-enabled.0` 以外未定義である。

    :2: 初期設定のすべてのコンテナーに反映する

    ABOUT_CONFIG

    - `network.http.windows-sso.container-enabled.1` の値が `true` である。
    - `network.http.windows-sso.container-enabled.2` の値が `true` である。
    - `network.http.windows-sso.container-enabled.3` の値が `true` である。
    - `network.http.windows-sso.container-enabled.4` の値が `true` である。

    :3: 任意のコンテナーに反映する

    ABOUT_CONFIG

    - `network.http.windows-sso.container-enabled.*` の検索結果において、カスタマイズでの指定値が反映されている。

Network-32: クライアント認証でのRSA-PSSの使用

    :1: 許可する（既定）

    ABOUT_CONFIG

    - `security.osclientcerts.assume_rsa_pss_support` の値が `true` である。

    :2: 禁止する

    ABOUT_CONFIG

    - `security.osclientcerts.assume_rsa_pss_support` の値が `false` である。

Network-33: [廃止] クロスオリジンのリダイレクトでのAuthorizationヘッダーの引き継ぎ

    :1: [廃止] 安全を優先し、引き継がない（既定）

    [廃止]

    :2: [廃止] 互換性を優先し、引き継ぐ

    [廃止]

Network-34: HTTPS DNSレコードの解決でのOSのDNSリゾルバーの使用

    :1: 使用する（既定）

    - TBD

    :2: 使用しない

    - TBD

Network-35: Microsoft Entraによるシングルサインオン（SSO）の可否

    :1: 許可する

    - TBD

    :2: 許可しない（既定）

    - TBD

Network-36: HTTPでの接続を指示されたときのHTTPSでの接続試行（HTTPSファースト）の可否

    :1: HTTPSから試行する（既定）

    - TBD

    :2: HTTPから試行する

    - TBD
