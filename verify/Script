# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

Script-0: Webページのスクリプトの挙動の検証

   :1: 事前準備

    - 前項に引き続いて検証するか、{%if use_meta_installer %}または以下の状態を整えておく。
        - 作成済みの `{{meta_installer_file_name}}*.exe` を検証用ユーザーとして実行し、カスタマイズ済みFirefoxのインストールを完了している。
        - 管理者権限を要求された場合は、`管理者`ユーザーで認証する。
    {% else %}再ログオン、インストーラの手動実行など、所定の手順でFirefoxのインストール及びカスタマイズを反映済みの状態とする。{% endif %}

Script-1: スクリプトによる頻繁なalertの可否

    :1: 許可する

    - Firefoxを起動する。
    - テストケースの `alert.html` を開く。
    - **確認**
        - 2つ目以降のダイアログに、以後のダイアログを表示しないようにするかどうかを尋ねるチェックボックスが表示されない。

    :2: 禁止する（3秒以内にalertが繰り返されたら警告を表示する）（既定）

    - Firefoxを起動する。
    - テストケースの `alert.html` を開く。
    - **確認**
        - 2つ目以降のダイアログに、以後のダイアログを表示しないようにするかどうかを尋ねるチェックボックスが表示される。

Script-2: プッシュ通知の可否

    :1: 確認の上で許可する（通常版・既定）

    ABOUT_CONFIG

    - `dom.push.enabled` の値が `true` である。

    :5: 特定サイトのみ初期状態で確認なしで許可/禁止する

    - Firefoxを起動する。
    - 確認なしでpush通知を許可する対象のサイトを開き、アドレスバーのアイコンをクリックして、パネルを開く。
    - **確認**
        - 通知の受信を許可するよう権限が設定されている旨表示される。

    :3: 禁止する（ESR版・既定）

    - Firefoxを起動する。
    - `https://piro.sakura.ne.jp/test/notification.html` を開く。
    - 「Notify」ボタンをクリックする。
    - **確認**
        - デスクトップ通知が表示されない。
        - デスクトップ通知の権限の確認が表示されない。

    :6: すべてのサイトについて初期状態で確認無しで禁止する（「通知の許可の要求をブロック」にチェック）

    OPTIONS

    - 「プライバシーとセキュリティ」→「許可設定」→「通知」→「設定」で「通知の許可の要求をブロック」にチェックが入っている。

Script-3: ゲームパッドAPIの利用の可否

    :1: 許可する（既定）

    ABOUT_CONFIG

    - `dom.gamepad.enabled` の値が `true` である。

    :2: 禁止する

    ABOUT_CONFIG

    - `dom.gamepad.enabled` の値が `false` である。

Script-4: DOMイベントによるクリップボード操作のオーバーライド

    :1: 許可する（既定）

    {%if DisableDeveloperTools %}
    - ポリシー設定から `DisableDeveloperTools` を削除し、開発ツールを一時的に有効化しておく。
      {% endif %}
    - Firefoxを起動する。
    - テストケースの `mouseevent.html` を開く。
    - Ctrl-Shift-KでWebコンソールを開く。
    - コンテンツ内の文字を選択して、キーボードショートカット「Ctrl-C」でコピーする。
    - **確認**
        - `copy` というメッセージのダイアログが表示される。
      {%if DisableDeveloperTools %}
    - ポリシー設定から一時的に削除した `DisableDeveloperTools` を元に戻す。
      {% endif %}

    :2: 禁止する

    {%if DisableDeveloperTools %}
    - ポリシー設定から `DisableDeveloperTools` を削除し、開発ツールを一時的に有効化しておく。
      {% endif %}
    - Firefoxを起動する。
    - テストケースの `mouseevent.html` を開く。
    - Ctrl-Shift-KでWebコンソールを開く。
    - コンテンツ内の文字を選択して、キーボードショートカット「Ctrl-C」でコピーする。
    - **確認**
        - `copy` というメッセージのダイアログが表示されない。
      {%if DisableDeveloperTools %}
    - ポリシー設定から一時的に削除した `DisableDeveloperTools` を元に戻す。
      {% endif %}

Script-5: DOMイベントによるコンテキストメニュー操作のオーバーライド

    :1: 許可する（既定）

    - Firefoxを起動する。
    - テストケースの `mouseevent.html` を開く。
    - コンテンツ領域の上で右クリックする。
    - **確認**
        - コンテキストメニューが開かれない。

    :2: 禁止する

    - Firefoxを起動する。
    - テストケースの `mouseevent.html` を開く。
    - コンテンツ領域の上で右クリックする。
    - **確認**
        - コンテキストメニューが開かれる。

Script-7: 動画・音声の自動再生の可否

    :1: 許可する

    ABOUT_CONFIG

    - `media.autoplay.default` の値が `0` である。
    - `media.autoplay.blocking_policy` の値が `0` である。

    :2: 禁止する

    ABOUT_CONFIG

    - `media.autoplay.default` の値が `5` である。
    - `media.autoplay.blocking_policy` の値が `1` である。

    :3: 原則禁止するが、ユーザーの操作で再生される物は許可（既定）

    ABOUT_CONFIG

    - `media.autoplay.default` の値が `1` である。
    - `media.autoplay.blocking_policy` の値が `0` である。

Script-8: target=_blankリンクに「rel=noopener」を自動的に付与する

    :1: 付与する（既定）

    - Firefoxを起動する。
    - テストケースリストから`noopener.html`を開き、ページ内のリンクをクリックする。
    - **確認**
        - テスト結果に`window.opener = null`と出力されている。

    :2: 付与しない

    - Firefoxを起動する。
    - テストケースリストから`noopener.html`を開き、ページ内のリンクをクリックする。
    - **確認**
        - テスト結果に`window.opener = [object Window]`と出力されている。

Script-9: ページ読み込み時点での、購読を促す通知の表示の可否

    :1: 表示する

    {%if NotificationGloballyDisabled %}
    - プッシュ通知が初期状態で無効化されている状況では、購読を促す通知も抑止されるため、検証を省略する。
    {%else%}
    {%if DisableDeveloperTools %}
    - ポリシー設定から `DisableDeveloperTools` を削除し、開発ツールを一時的に有効化しておく。
      {% endif %}
    - Firefoxを起動する。
    - `https://example.com/` を開く。
    - Ctrl-Shift-KでWebコンソールを開く。
    - `Notification.requestPermission()` と入力し、実行する。
    - **確認**
        - 権限の許可を求めるポップアップが表示される。
      {%if DisableDeveloperTools %}
    - ポリシー設定から一時的に削除した `DisableDeveloperTools` を元に戻す。
      {% endif %}
      {% endif %}

    :2: 禁止する（既定）

    {%if DisableDeveloperTools %}
    - ポリシー設定から `DisableDeveloperTools` を削除し、開発ツールを一時的に有効化しておく。
      {% endif %}
    - Firefoxを起動する。
    - `https://example.com/` を開く。
    - Ctrl-Shift-KでWebコンソールを開く。
    - `Notification.requestPermission()` と入力し、実行する。
    - **確認**
        - 権限の許可を求めるポップアップが表示されず、アドレスバー中に通知のアイコンが表示される。
      {%if DisableDeveloperTools %}
    - ポリシー設定から一時的に削除した `DisableDeveloperTools` を元に戻す。
      {% endif %}

Script-10: 動画に対するPicture-in-Picture表示の可否

    :1: 許可する（既定）

    - Firefoxを起動する。
    - テストケースの `fullscreen.html` を開く。
    - 動画の上で右クリックする。
    - **確認**
        - メニューに「ピクチャーインピクチャー」が表示される。

    :2: 禁止する

    - Firefoxを起動する。
    - テストケースの `fullscreen.html` を開く。
    - 動画の上で右クリックする。
    - **確認**
        - メニューに「ピクチャーインピクチャー」が表示されない。

Script-11: AudioWorklet APIの使用の可否

    :1: 許可する（既定）

    - Firefoxを起動する。
    - テストケースの `fullscreen.html` を開く。
    - 動画の上で右クリックする。
    - **確認**
        - 「AudioWorklet」欄に `enabled` と表示される。

    :2: 禁止する

    - Firefoxを起動する。
    - テストケースの `browser.html` を開く。
    - **確認**
        - 「AudioWorklet」欄に `disabled` と表示される。

Script-12: VRデバイスへのアクセスの可否

    :1: 確認を求める（既定）

    - Firefoxを起動する。
    - 任意のWebサイトを開き、アドレスバーのアイコンをクリックして、パネルを開く。
    - **確認**
        - VRデバイスへのアクセスに関する権限の情報が表示されない。

    :2: 特定サイトのみ初期状態で確認なしで許可/禁止する

    - Firefoxを起動する。
    - 確認なしでVRデバイスへのアクセスを許可する対象のサイトを開き、アドレスバーのアイコンをクリックして、パネルを開く。
    - **確認**
        - VRデバイスへのアクセスを許可するよう権限が設定されている旨表示される。

Script-13: サンドボックス化されたiframeの自動ダウンロードの抑止

    :1: ブロックする（既定）

    - Firefoxを起動する。
    - テストケースの`block_allow_downloads.html` を開く。
    - **確認**
      - ダウンロードが自動的に開始しない。

    :2: ブロックしない

    - Firefoxを起動する
    - テストケースの`block_allow_downloads.html` を開く。
    - **確認**
      - ダウンロードが自動的に開始する。

Script-14: window.nameのクロスオリジン間での共有

    :1: 共有を許可しない（既定）

    ABOUT_CONFIG

    - `privacy.window.name.update.enabled` の値が `true` である。

    :2: 共有を許可する

    ABOUT_CONFIG

    - `privacy.window.name.update.enabled` の値が `false` である。

Script-15: レガシーな`KeyboardEvent.initKeyEvent()`の使用可否

    :1: 有効化する

    ABOUT_CONFIG

    - `dom.keyboardevent.init_key_event.enabled` の値が `true` である。

    :2: 無効化する（既定）

    ABOUT_CONFIG

    - `dom.keyboardevent.init_key_event.enabled` の値が `false` である。

Script-16: レガシーなWebVR APIの使用可否

    :1: 有効化する

    ABOUT_CONFIG

    - `dom.vr.enabled` の値が `true` である。

    :2: 無効化する（既定）

    ABOUT_CONFIG

    - `dom.vr.enabled` の値が `false` である。

Script-17: レガシーなNetwork Information APIの使用可否

    :1: 有効化する

    ABOUT_CONFIG

    - `dom.netinfo.enabled` の値が `true` である。

    :2: 無効化する（既定）

    ABOUT_CONFIG

    - `dom.netinfo.enabled` の値が `false` である。

Script-18: スクリプトから開いていないウィンドウをスクリプトで閉じる挙動の可否

    :1: 許可しない(既定)

    {%if DisableDeveloperTools %}
    - ポリシー設定から `DisableDeveloperTools` を削除し、開発ツールを一時的に有効化しておく。
    {% endif %}
    - Firefoxを起動する。
    - テストケースの`index.html` を開く。
    - Ctrl+Shift+Kでコンソールを開く。
    - window.close()をコンソールで実行する。
    - **確認**
      - ウィンドウが閉じられない。

    :2: 許可する

    {%if DisableDeveloperTools %}
    - ポリシー設定から `DisableDeveloperTools` を削除し、開発ツールを一時的に有効化しておく。
    {% endif %}
    - Firefoxを起動する。
    - テストケースの`index.html` を開く。
    - Ctrl+Shift+Kでコンソールを開く。
    - window.close()をコンソールで実行する。
    - **確認**
      - ウィンドウが閉じられる。

Script-19: MathMLの非推奨の属性であるlquoteおよびrquoteの使用

    :1: 使用しない（既定）

    - Firefoxを起動する。
    - テストケースの `mathml.html` を開く。
    - **確認**
        - 見出し「lquote, rquote」配下の「abc」の前後に記号が表示されない。

    :2: 使用する

    - Firefoxを起動する。
    - テストケースの `mathml.html` を開く。
    - **確認**
        - 見出し「lquote, rquote」配下の「abc」の前後に記号が表示される。

Script-20: MathMLのsemanticsおよびmactionで初期状態で表示する内容の制御

    :1: 最初の子要素のみを表示（既定）

    - Firefoxを起動する。
    - テストケースの `mathml.html` を開く。
    - 見出し「maction」配下の「6/8」をクリックする。
    - **確認**
        - 何も起こらない。

    :2: 最初の子要素以外も表示

    - Firefoxを起動する。
    - テストケースの `mathml.html` を開く。
    - 見出し「maction」配下の「6/8」をクリックする。
    - **確認**
        - 表示される式が別の式に切り替わる。

Script-21: SVG2の非標準のプロパティnearestViewportElementとfarthestViewportElementの使用

    :1: 使用しない（既定）

    ABOUT_CONFIG

    - `svg.nearestAndFarthestViewportElement.enabled` の値が `true` である。

    :2: 使用する

    ABOUT_CONFIG

    - `svg.nearestAndFarthestViewportElement.enabled` の値が `false` である。

Script-22: iframe内のSVGに反映するテーマ

    :1: OSやブラウザーの設定よりも埋め込み要素自体のテーマ設定を優先（既定）

    ABOUT_CONFIG

    - `svg.embedder-prefers-color-scheme.content.enabled` の値が `true` である。

    :2: OSやブラウザーの設定を優先

    ABOUT_CONFIG

    - `svg.embedder-prefers-color-scheme.content.enabled` の値が `false` である。

Script-23: 非推奨のU2F（Universal 2nd Factor） JavaScript APIの使用

    :1: 使用しない（既定）

    ABOUT_CONFIG

    - `security.webauth.u2f` の値が `false` である。

    :2: 使用する

    ABOUT_CONFIG

    - `security.webauth.u2f` の値が `true` である。

Script-24: caches、CacheStorage、Cacheを使用可能なコンテキストの制限緩和

    :1: 安全なコンテキストでのみ使用を許可（既定）

    ABOUT_CONFIG

    - `dom.caches.testing.enabled` の値が `false` である。

    :2: 安全でないコンテキストでの使用も許可

    ABOUT_CONFIG

    - `dom.caches.testing.enabled` の値が `true` である。

Script-25: WebRTCのRTCRtpSender.getParameters()、RTCRtpSender.setParameters()、RTCRtpReceiver.getParametersの振る舞い

    :1: 他のブラウザーと互換性のある動作

    ABOUT_CONFIG

    - `media.peerconnection.allow_old_setParameters` の値が `false` である。

    :2: 他のブラウザーとは非互換の、古いFirefoxと互換性のある動作（既定）

    ABOUT_CONFIG

    - `media.peerconnection.allow_old_setParameters` の値が `true` である。

Script-26: リッチテキストエディターの振る舞い

    :1: 他のブラウザーと互換性のある動作（既定）

    ABOUT_CONFIG

    - `editor.join_split_direction.compatible_with_the_other_browsers` の値が `true` である。

    :2: 他のブラウザーとは非互換の、古いFirefoxと互換性のある動作

    ABOUT_CONFIG

    - `editor.join_split_direction.compatible_with_the_other_browsers` の値が `false` である。

Script-27: Total Cookie Protectionが有効な状態での、サードパーティのコンテキストでのService Workerの使用

    :1: 分離されたコンテキストで使用を許可（既定）

    ABOUT_CONFIG

    - `privacy.partition.serviceWorkers` の値が `true` である。

    :2: 使用を禁止

    ABOUT_CONFIG

    - `privacy.partition.serviceWorkers` の値が `false` である。

Script-28: WebMIDI APIの使用

    :1: 分離されたコンテキストで使用を許可（既定）

    ABOUT_CONFIG

    - `dom.webmidi.enabled` の値が `true` である。

    :2: 使用を禁止

    ABOUT_CONFIG

    - `dom.webmidi.enabled` の値が `false` である。

Script-29: サードパーティのコンテキストでのストレージとCookieの分離

    :1: 他のブラウザーと同様に分離する（既定）

    ABOUT_CONFIG

    - `privacy.partition.always_partition_third_party_non_cookie_storage` の値が `true` である。
    - `privacy.partition.always_partition_third_party_non_cookie_storage.exempt_sessionstorage` の値が `false` である。

    :2: 古いFirefoxと同様の動作とする

    ABOUT_CONFIG

    - `privacy.partition.always_partition_third_party_non_cookie_storage` の値が `false` である。
    - `privacy.partition.always_partition_third_party_non_cookie_storage.exempt_sessionstorage` の値が `true` である。

Script-30: scrollendイベントによるスクロール操作終了の検知

    :1: 他のブラウザーと同様に許可する（既定）

    ABOUT_CONFIG

    - `apz.scrollend-event.content.enabled` の値が `true` である。

    :2: 古いFirefoxと同様の動作とする

    ABOUT_CONFIG

    - `apz.scrollend-event.content.enabled` の値が `false` である。

Script-31: Service Workerの使用の可否

    :1: 許可する（既定）

    - Firefoxを起動する。
    - テストケースの browser.html を開く。
    - **確認**
        - 「ServiceWorker」欄にenabledと表示される。

    :2: 禁止する

    - Firefoxを起動する。
    - テストケースの browser.html を開く。
    - **確認**
        - 「ServiceWorker」欄にdisabledと表示される。

Script-32: Shiftキーを押しながらの右クリックによる、Firefox本来のコンテキストメニューの強制表示

    :1: 使用し、コンテンツによるShiftキーを押しながらの右クリック操作の無効化を禁止（既定）

    TBD

    :2: 使用せず、コンテンツによるShiftキーを押しながらの右クリック操作の無効化を許可

    TBD
